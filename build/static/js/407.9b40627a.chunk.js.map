{"version":3,"file":"static/js/407.9b40627a.chunk.js","mappings":"wNA0HA,QAlHA,WACE,MAAM,SACJA,EAAQ,aACRC,EAAY,MACZC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,cAEDC,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,GAC/BC,GAAQC,EAAAA,EAAAA,MACRC,GAAWC,EAAAA,EAAAA,MAoBjB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,WAASG,UAAU,aAAYD,UAC7BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,uBAAsBD,UACnCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,6BAA4BD,UACzCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,+CAA8CD,UAC3DF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,mBAAkBD,UAC/BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,kBAAiBD,UAC9BE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,MAAKD,SAAA,EAClBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,qCAAoCD,SAAA,EAIjDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qBACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,sEAKLF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,SAAQD,UACrBE,EAAAA,EAAAA,MAAA,QACED,UAAU,kBACVE,SAAUlB,GAxCfmB,UACfZ,GAAU,GACV,MAAMa,QAAiBC,EAAAA,EAAAA,IAAeC,GACjCF,EAASG,QAUZC,EAAAA,EAAAA,GAAUf,EAAOW,EAASK,QAAS,CAAEC,QAAS,MAC9CnB,GAAU,KAVVI,EAAS,sBAAuB,CAC9BgB,MAAO,CACLC,MAAON,EAAKM,UAGhBJ,EAAAA,EAAAA,GAAUf,EAAOW,EAASS,QAAQC,IAAK,CAAEJ,QAAS,MAClDnB,GAAU,GACVN,IAIF,IAyBqDc,SAAA,EAEjCE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,oBAAmBD,SAAA,EAChCF,EAAAA,EAAAA,KAAA,SAAOkB,SAAO,EAAAhB,SAAC,WACfF,EAAAA,EAAAA,KAAA,SACEmB,KAAK,QACLhB,UAAU,eACViB,YAAY,iBACZC,KAAK,QACLC,GAAG,WACCpC,EAAS,QAAS,CACpBqC,SAAU,yBACVC,QAAS,CACPC,MACE,4JACFb,QAAS,8BAKR,OAANtB,QAAM,IAANA,OAAM,EAANA,EAAQyB,SACPf,EAAAA,EAAAA,KAAA,KAAGG,UAAU,kBAAiBD,SAC3BZ,EAAOyB,MAAMH,cAIpBZ,EAAAA,EAAAA,KAAA,OAAKG,UAAU,8BAA6BD,UAC1CF,EAAAA,EAAAA,KAAA,UACEmB,KAAK,SACLhB,UAAU,aACVuB,SAAUjC,EAAOS,SAEhBT,GACCW,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,OAAMD,SAAC,UACvBF,EAAAA,EAAAA,KAAC2B,EAAAA,GAAa,CACZC,YAAY,QACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,QAIbhC,EAAAA,EAAAA,KAAA,QAAAE,SAAM,oCAepC,C","sources":["adminpanel/components/forgotPassword.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { forgetPassword } from \"../apiServices/home/homeHttpService\";\r\nimport { showAlert } from \"./commonComponent/alertManager\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { RotatingLines } from \"react-loader-spinner\";\r\n\r\nfunction ForgotPassword() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n  const [loader, setLoader] = useState(false);\r\n  const alert = useAlert();\r\n  const navigate = useNavigate();\r\n\r\n  const onSubmit = async (data) => {\r\n    setLoader(true);\r\n    const response = await forgetPassword(data);\r\n    if (!response.error) {\r\n      navigate(\"/admin/verification\", {\r\n        state: {\r\n          email: data.email,\r\n        },\r\n      });\r\n      showAlert(alert, response.results.otp, { timeout: 3000 });\r\n      setLoader(false);\r\n      reset();\r\n    } else {\r\n      showAlert(alert, response.message, { timeout: 3000 });\r\n      setLoader(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"login_page\">\r\n        <div className=\"container-fluid px-0\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-xxl-4 col-xl-4 col-lg-6 col-md-10 col-11\">\r\n              <div className=\"login_top shadow\">\r\n                <div className=\"login_page_form\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12 formheader mb-4 text-center\">\r\n                      {/* <div class=\"text-center mb-4\">\r\n                                       <img src=\"assets/img/logo.png\" alt=\"\">\r\n                                    </div> */}\r\n                      <h1>Forgot Password</h1>\r\n                      <p>\r\n                        Please enter your registered Email Address to receive\r\n                        the OTP\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                      <form\r\n                        className=\"row form-design\"\r\n                        onSubmit={handleSubmit(onSubmit)}\r\n                      >\r\n                        <div className=\"form-group col-12\">\r\n                          <label htmlFor>Email</label>\r\n                          <input\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"User@gmail.com\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            {...register(\"email\", {\r\n                              required: \"This field is required\",\r\n                              pattern: {\r\n                                value:\r\n                                  /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                                message: \"Invalid email address\",\r\n                              },\r\n                            })}\r\n                          />\r\n\r\n                          {errors?.email && (\r\n                            <p className=\"form-error mt-1\">\r\n                              {errors.email.message}\r\n                            </p>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"form-group col-12 mb-0 mt-2\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"comman_btn\"\r\n                            disabled={loader}\r\n                          >\r\n                            {loader ? (\r\n                              <div>\r\n                                <span className=\"me-2\">Wait</span>\r\n                                <RotatingLines\r\n                                  strokeColor=\"white\"\r\n                                  strokeWidth=\"5\"\r\n                                  animationDuration=\"0.75\"\r\n                                  width=\"20\"\r\n                                  visible={true}\r\n                                />\r\n                              </div>\r\n                            ) : (\r\n                              <span>Submit</span>\r\n                            )}\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n"],"names":["register","handleSubmit","reset","formState","errors","useForm","mode","loader","setLoader","useState","alert","useAlert","navigate","useNavigate","_jsx","_Fragment","children","className","_jsxs","onSubmit","async","response","forgetPassword","data","error","showAlert","message","timeout","state","email","results","otp","htmlFor","type","placeholder","name","id","required","pattern","value","disabled","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible"],"sourceRoot":""}