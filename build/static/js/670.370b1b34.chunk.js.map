{"version":3,"file":"static/js/670.370b1b34.chunk.js","mappings":"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","sources":["adminpanel/components/merchantMang/addMerchant.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from \"../commonComponent/header\";\r\nimport SideBar from \"../commonComponent/sideBar\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { showAlert } from \"../commonComponent/alertManager\";\r\nimport { addMerchant } from \"../../apiServices/home/homeHttpService\";\r\n\r\nfunction AddMerchant() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n  const [type, setType] = useState(\"password\");\r\n  const alert = useAlert();\r\n  const navigate = useNavigate();\r\n\r\n  const typeChange = () => {\r\n    if (type === \"password\") setType(\"text\");\r\n    else {\r\n      setType(\"password\");\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    const response = await addMerchant(data);\r\n    if (!response.error) {\r\n      navigate(\"/admin/merchant-management\");\r\n      showAlert(alert, response.message, { timeout: 3000 });\r\n\r\n      reset();\r\n    } else {\r\n      showAlert(alert, response.message, { timeout: 3000 });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Header />\r\n\r\n      <div className=\"admin_main\">\r\n        <SideBar />\r\n\r\n        <div className=\"admin_contentpart\">\r\n          <Link to=\"/admin/merchant-management\" className=\"comman_btn w-fit\">\r\n            <i className=\"fa fa-arrow-left\" />\r\n          </Link>\r\n\r\n          <div className=\"row comman_design mx-0 mt-4\">\r\n            <div className=\"col-12\">\r\n              <div className=\"row comman_table pt-md-4 pb-md-4 pb-3 px-md-4 px-2\">\r\n                <h3 className=\"mb-3 fs-5 fw-semibold\">Add Merchant</h3>\r\n                <form\r\n                  className=\"form-design \"\r\n                  onSubmit={handleSubmit(onSubmit)}\r\n                >\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"form-label\">Name</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"name\"\r\n                          id=\"name\"\r\n                          {...register(\"name\", {\r\n                            required: true,\r\n                            minLength: 4,\r\n                            maxLength: 32,\r\n                            pattern: {\r\n                              value: /[^0-9-@$!%*_?&#]/,\r\n                            },\r\n                          })}\r\n                        />\r\n                        {errors.name && errors.name.type === \"required\" && (\r\n                          <p className=\"form-error\">This field is required</p>\r\n                        )}\r\n\r\n                        {errors.name && errors.name.type === \"minLength\" && (\r\n                          <p className=\"form-error\">\r\n                            The name must have at least 4 characters\r\n                          </p>\r\n                        )}\r\n                        {errors.name && errors.name.type === \"maxLength\" && (\r\n                          <p className=\"form-error\">\r\n                            The name must have a maximum of 32 characters\r\n                          </p>\r\n                        )}\r\n                        {errors.name && errors.name.type === \"pattern\" && (\r\n                          <p className=\"form-error\">Not allowed</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"form-label\">Email</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"email\"\r\n                          id=\"email\"\r\n                          {...register(\"email\", {\r\n                            required: \"This field is required\",\r\n                            pattern: {\r\n                              value:\r\n                                /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                              message: \"Invalid email address\",\r\n                            },\r\n                          })}\r\n                        />\r\n\r\n                        {errors?.email && (\r\n                          <p className=\"form-error\">{errors.email.message}</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"form-label\">Password</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"password\"\r\n                          id=\"password\"\r\n                          autoComplete=\"on\"\r\n                          {...register(\"password\", {\r\n                            required: \"This field is required\",\r\n                            pattern: {\r\n                              value:\r\n                                /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&#^])[A-Za-z\\d@$!%*?&#^]{8,}$/,\r\n                              message:\r\n                                \"Password must be 8 characters including one uppercase letter, one special character and alphanumeric characters\",\r\n                            },\r\n                          })}\r\n                        />\r\n                        <i\r\n                          className={`fa eyepassword fa-eye${\r\n                            type === \"password\" ? \"-slash\" : \"\"\r\n                          }`}\r\n                          onClick={() => typeChange()}\r\n                        ></i>\r\n                        {errors?.password && (\r\n                          <p className=\"form-error\">\r\n                            {errors?.password?.message}\r\n                          </p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                      <button className=\"comman_btn w-fit\" type=\"submit\">\r\n                        Add Merchants\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddMerchant;\r\n"],"names":["_errors$password","register","handleSubmit","reset","formState","errors","useForm","mode","type","setType","useState","alert","useAlert","navigate","useNavigate","_jsxs","_Fragment","children","_jsx","Header","className","SideBar","Link","to","onSubmit","async","response","addMerchant","data","error","showAlert","message","timeout","htmlFor","name","id","required","minLength","maxLength","pattern","value","email","autoComplete","onClick","password"],"sourceRoot":""}