{"version":3,"file":"static/js/963.5bb8c4e2.chunk.js","mappings":"wNA+KA,QAvKA,WAA0B,IAADA,EAAAC,EACvB,MAAM,SACJC,EAAQ,aACRC,EAAY,MACZC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,cAEDC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,aAC1BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,aAC5BG,EAAQC,IAAaJ,EAAAA,EAAAA,WAAS,GAC/BK,GAAQC,EAAAA,EAAAA,MACRC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAmCjB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,WAASG,UAAU,aAAYD,UAC7BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,uBAAsBD,UACnCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,6BAA4BD,UACzCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,+CAA8CD,UAC3DF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,mBAAkBD,UAC/BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,kBAAiBD,UAC9BE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,MAAKD,SAAA,EAClBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,qCAAoCD,SAAA,EAIjDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,4BAELF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,SAAQD,UACrBE,EAAAA,EAAAA,MAAA,QACED,UAAU,kBACVE,SAAUxB,GAvCfyB,UAAiB,IAADC,EAC/B,GAAIC,EAAKC,WAAaD,EAAKE,YAEzB,YADAhB,EAAMiB,MAAM,sDAGdlB,GAAU,GACVe,EAAKI,MAAgB,OAARd,QAAQ,IAARA,GAAe,QAAPS,EAART,EAAUe,aAAK,IAAAN,OAAP,EAARA,EAAiBK,MAC9B,MAAME,QAAiBC,EAAAA,EAAAA,IAAcP,GAChCM,EAASH,QAOZK,EAAAA,EAAAA,GAAUtB,EAAOoB,EAASG,QAAS,CAAEC,QAAS,MAC9CzB,GAAU,KAPV0B,aAAaC,WAAW,cACxBxB,EAAS,iBACToB,EAAAA,EAAAA,GAAUtB,EAAOoB,EAASG,QAAS,CAAEC,QAAS,MAC9CzB,GAAU,GACVX,IAIF,IAsBqDoB,SAAA,EAEjCE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,sCAAqCD,SAAA,EAClDF,EAAAA,EAAAA,KAAA,SAAOqB,SAAO,EAAAnB,SAAC,kBACfF,EAAAA,EAAAA,KAAA,SACEb,KAAMA,EACNgB,UAAU,eACVmB,YAAY,aACZC,KAAK,WACLC,GAAG,WACHC,aAAa,QACT7C,EAAS,WAAY,CACvB8C,SAAU,yBACVC,QAAS,CACPC,MACE,2EACFX,QACE,wHAIRjB,EAAAA,EAAAA,KAAA,KACEG,UAAW,yBACA,aAAThB,EAAsB,SAAW,IAEnC0C,QAASA,KA5ERzC,EAAZ,aAATD,EAA6B,OAEvB,WA0E0C,KAEvB,OAANH,QAAM,IAANA,OAAM,EAANA,EAAQyB,YACPT,EAAAA,EAAAA,KAAA,KAAGG,UAAU,aAAYD,SAChB,OAANlB,QAAM,IAANA,GAAgB,QAAVN,EAANM,EAAQyB,gBAAQ,IAAA/B,OAAV,EAANA,EAAkBuC,cAIzBb,EAAAA,EAAAA,MAAA,OAAKD,UAAU,sCAAqCD,SAAA,EAClDF,EAAAA,EAAAA,KAAA,SAAOqB,SAAO,EAAAnB,SAAC,0BACfF,EAAAA,EAAAA,KAAA,SACEb,KAAMG,EACNa,UAAU,eACVmB,YAAY,aACZC,KAAK,cACLC,GAAG,cACHC,aAAa,QACT7C,EAAS,cAAe,CAC1B8C,SAAU,yBACVC,QAAS,CACPC,MACE,2EACFX,QACE,wHAIRjB,EAAAA,EAAAA,KAAA,KACEG,UAAW,yBACC,aAAVb,EAAuB,SAAW,IAEpCuC,QAASA,KArGPtC,EAAZ,aAAVD,EAA+B,OAExB,WAmG0C,KAExB,OAANN,QAAM,IAANA,OAAM,EAANA,EAAQ0B,eACPV,EAAAA,EAAAA,KAAA,KAAGG,UAAU,aAAYD,SAChB,OAANlB,QAAM,IAANA,GAAmB,QAAbL,EAANK,EAAQ0B,mBAAW,IAAA/B,OAAb,EAANA,EAAqBsC,cAI5BjB,EAAAA,EAAAA,KAAA,OAAKG,UAAU,8BAA6BD,UAC1CF,EAAAA,EAAAA,KAAA,UACEb,KAAK,SACLgB,UAAU,aACV2B,SAAUtC,EAAOU,SAEhBV,GACCY,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,OAAMD,SAAC,UACvBF,EAAAA,EAAAA,KAAC+B,EAAAA,GAAa,CACZC,YAAY,QACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,QAIbpC,EAAAA,EAAAA,KAAA,QAAAE,SAAM,oCAepC,C","sources":["adminpanel/components/resetPassword.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { resetPassword } from \"../apiServices/home/homeHttpService\";\r\nimport { showAlert } from \"./commonComponent/alertManager\";\r\nimport { RotatingLines } from \"react-loader-spinner\";\r\n\r\nfunction ResetPassword() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n  const [type, setType] = useState(\"password\");\r\n  const [type2, setType2] = useState(\"password\");\r\n  const [loader, setLoader] = useState(false);\r\n  const alert = useAlert();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const typeChange = () => {\r\n    if (type === \"password\") setType(\"text\");\r\n    else {\r\n      setType(\"password\");\r\n    }\r\n  };\r\n  const typeChange2 = () => {\r\n    if (type2 === \"password\") setType2(\"text\");\r\n    else {\r\n      setType2(\"password\");\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    if (data.password !== data.newPassword) {\r\n      alert.error(\"New Password & Confirm New Password Should Be Same\");\r\n      return;\r\n    }\r\n    setLoader(true);\r\n    data.email = location?.state?.email;\r\n    const response = await resetPassword(data);\r\n    if (!response.error) {\r\n      localStorage.removeItem(\"token-timp\");\r\n      navigate(\"/admin/login\");\r\n      showAlert(alert, response.message, { timeout: 3000 });\r\n      setLoader(false);\r\n      reset();\r\n    } else {\r\n      showAlert(alert, response.message, { timeout: 3000 });\r\n      setLoader(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"login_page\">\r\n        <div className=\"container-fluid px-0\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-xxl-4 col-xl-4 col-lg-6 col-md-10 col-11\">\r\n              <div className=\"login_top shadow\">\r\n                <div className=\"login_page_form\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12 formheader mb-4 text-center\">\r\n                      {/* <div class=\"text-center mb-4\">\r\n                                       <img src=\"assets/img/logo.png\" alt=\"\">\r\n                                    </div> */}\r\n                      <h1>Reset Password</h1>\r\n                      <p>Enter New Password </p>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                      <form\r\n                        className=\"row form-design\"\r\n                        onSubmit={handleSubmit(onSubmit)}\r\n                      >\r\n                        <div className=\"form-group col-12 position-relative\">\r\n                          <label htmlFor>New Password</label>\r\n                          <input\r\n                            type={type}\r\n                            className=\"form-control\"\r\n                            placeholder=\"**********\"\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"on\"\r\n                            {...register(\"password\", {\r\n                              required: \"This field is required\",\r\n                              pattern: {\r\n                                value:\r\n                                  /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&#^])[A-Za-z\\d@$!%*?&#^]{8,}$/,\r\n                                message:\r\n                                  \"Password must be 8 characters including one uppercase letter, one special character and alphanumeric characters\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          <i\r\n                            className={`fa eyepassword fa-eye${\r\n                              type === \"password\" ? \"-slash\" : \"\"\r\n                            }`}\r\n                            onClick={() => typeChange()}\r\n                          ></i>\r\n                          {errors?.password && (\r\n                            <p className=\"form-error\">\r\n                              {errors?.password?.message}\r\n                            </p>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"form-group col-12 position-relative\">\r\n                          <label htmlFor>Confirm New Password</label>\r\n                          <input\r\n                            type={type2}\r\n                            className=\"form-control\"\r\n                            placeholder=\"**********\"\r\n                            name=\"newPassword\"\r\n                            id=\"newPassword\"\r\n                            autoComplete=\"on\"\r\n                            {...register(\"newPassword\", {\r\n                              required: \"This field is required\",\r\n                              pattern: {\r\n                                value:\r\n                                  /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&#^])[A-Za-z\\d@$!%*?&#^]{8,}$/,\r\n                                message:\r\n                                  \"Password must be 8 characters including one uppercase letter, one special character and alphanumeric characters\",\r\n                              },\r\n                            })}\r\n                          />\r\n                          <i\r\n                            className={`fa eyepassword fa-eye${\r\n                              type2 === \"password\" ? \"-slash\" : \"\"\r\n                            }`}\r\n                            onClick={() => typeChange2()}\r\n                          ></i>\r\n                          {errors?.newPassword && (\r\n                            <p className=\"form-error\">\r\n                              {errors?.newPassword?.message}\r\n                            </p>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"form-group col-12 mb-0 mt-2\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"comman_btn\"\r\n                            disabled={loader}\r\n                          >\r\n                            {loader ? (\r\n                              <div>\r\n                                <span className=\"me-2\">Wait</span>\r\n                                <RotatingLines\r\n                                  strokeColor=\"white\"\r\n                                  strokeWidth=\"5\"\r\n                                  animationDuration=\"0.75\"\r\n                                  width=\"20\"\r\n                                  visible={true}\r\n                                />\r\n                              </div>\r\n                            ) : (\r\n                              <span>Submit</span>\r\n                            )}\r\n                          </button>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"names":["_errors$password","_errors$newPassword","register","handleSubmit","reset","formState","errors","useForm","mode","type","setType","useState","type2","setType2","loader","setLoader","alert","useAlert","navigate","useNavigate","location","useLocation","_jsx","_Fragment","children","className","_jsxs","onSubmit","async","_location$state","data","password","newPassword","error","email","state","response","resetPassword","showAlert","message","timeout","localStorage","removeItem","htmlFor","placeholder","name","id","autoComplete","required","pattern","value","onClick","disabled","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible"],"sourceRoot":""}