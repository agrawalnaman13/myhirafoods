{"version":3,"file":"static/js/614.7116af9d.chunk.js","mappings":"4OA0MA,QAjMA,WACE,MAAOA,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,CAAC,MAC5C,SACJC,EAAQ,aACRC,EAAY,MACZC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,aAGRC,QAAQC,IAAIX,GAEZ,MAAMY,GAAQC,EAAAA,EAAAA,MACRC,GAAWC,EAAAA,EAAAA,MAeXC,EAAaA,KACbhB,EAAaiB,OAAS,GACxBhB,EAAgB,IAAID,EAAc,IACpC,EAaF,OACEkB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KAEPJ,EAAAA,EAAAA,MAAA,OAAKK,UAAU,aAAYH,SAAA,EACzBC,EAAAA,EAAAA,KAACG,EAAAA,EAAO,KACRN,EAAAA,EAAAA,MAAA,OAAKK,UAAU,oBAAmBH,SAAA,EAChCC,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAG,2BAA2BH,UAAU,mBAAkBH,UAC9DC,EAAAA,EAAAA,KAAA,KAAGE,UAAU,wBAEfF,EAAAA,EAAAA,KAAA,OAAKE,UAAU,8BAA6BH,UAC1CC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,SAAQH,UACrBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,qDAAoDH,SAAA,EACjEC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,wBAAuBH,SAAC,2BACtCC,EAAAA,EAAAA,KAAA,QAAME,UAAU,cAAcI,SAAUvB,GA3CrCwB,UACfC,EAAK7B,aAAeA,EACpB,MAAM8B,QAAiBC,EAAAA,EAAAA,IAAoBF,GACtCC,EAASE,OAMZC,EAAAA,EAAAA,GAAUrB,EAAOkB,EAASI,QAAS,CAAEC,QAAS,OAL9CrB,EAAS,6BACTmB,EAAAA,EAAAA,GAAUrB,EAAOkB,EAASI,QAAS,CAAEC,QAAS,MAE9C9B,IAGF,IAiC2Ee,UAC7DF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,MAAKH,SAAA,EAClBC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUH,UACvBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,aAAYH,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOe,QAAQ,aAAYhB,SAAC,eAC5BC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLd,UAAU,eACVe,KAAK,WACLC,GAAG,cACCpC,EAAS,WAAY,CACvBqC,UAAU,MAGbjC,EAAOkC,UACmB,aAAzBlC,EAAOkC,SAASJ,OACdhB,EAAAA,EAAAA,KAAA,KAAGE,UAAU,aAAYH,SAAC,iCAIlCC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUH,UACvBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,aAAYH,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOe,QAAQ,aAAYhB,SAAC,gBAC5BC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,SACLd,UAAU,eACVe,KAAK,YACLC,GAAG,eACCpC,EAAS,YAAa,CACxBqC,UAAU,MAGbjC,EAAOmC,WACoB,aAA1BnC,EAAOmC,UAAUL,OACfhB,EAAAA,EAAAA,KAAA,KAAGE,UAAU,aAAYH,SAAC,iCAIlCC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUH,UACvBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,aAAYH,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOe,QAAQ,aAAYhB,SAAC,2BAG5BC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,SACLd,UAAU,eACVe,KAAK,eACLC,GAAG,kBACCpC,EAAS,eAAgB,CAC3BqC,UAAU,EACVG,QAAS,CACPC,MAAO,wBAIZrC,EAAOsC,cACuB,aAA7BtC,EAAOsC,aAAaR,OAClBhB,EAAAA,EAAAA,KAAA,KAAGE,UAAU,aAAYH,SAAC,2BAE7Bb,EAAOsC,cACuB,YAA7BtC,EAAOsC,aAAaR,OAClBhB,EAAAA,EAAAA,KAAA,KAAGE,UAAU,aAAYH,SAAC,wBAIlCC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUH,UACvBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,aAAYH,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,kBACNpB,EAAa8C,KAAI,CAACC,EAASC,KAC1B9B,EAAAA,EAAAA,MAAA,OAAKK,UAAU,mBAAkBH,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLd,UAAU,eACVqB,MAAOG,EACPE,SAAWC,GAlGXC,EAACH,EAAOJ,KAClC,MAAMQ,EAAc,IAAIpD,GACxBoD,EAAYJ,GAASJ,EACrB3C,EAAgBmD,EAAY,EAgGAD,CAAoBH,EAAOE,EAAEG,OAAOT,SAG7B,IAAVI,GACC3B,EAAAA,EAAAA,KAAA,UACEgB,KAAK,SACLd,UAAU,6CACV+B,QAAStC,EAAWI,SACrB,OAIDC,EAAAA,EAAAA,KAAA,UACEgB,KAAK,UACLd,UAAU,iEACV+B,QAASA,IA7GhBN,KACrB,MAAMI,EAAc,IAAIpD,GACxBoD,EAAYG,OAAOP,EAAO,GAC1B/C,EAAgBmD,EAAY,EA0GeI,CAAcR,GAAO5B,SACrC,QAtBkC4B,WA8B7C3B,EAAAA,EAAAA,KAAA,OAAKE,UAAU,YAAWH,UACxBF,EAAAA,EAAAA,MAAA,OAAKK,UAAU,aAAYH,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOe,QAAQ,aAAYhB,SAAC,sBAC5BC,EAAAA,EAAAA,KAAA,YACEgB,KAAK,OACLd,UAAU,eACVe,KAAK,kBACLC,GAAG,qBACCpC,EAAS,kBAAmB,CAC9BqC,UAAU,MAGbjC,EAAOkD,iBAC0B,aAAhClD,EAAOkD,gBAAgBpB,OACrBhB,EAAAA,EAAAA,KAAA,KAAGE,UAAU,aAAYH,SAAC,iCAKlCC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,SAAQH,UACrBC,EAAAA,EAAAA,KAAA,UAAQgB,KAAK,SAASd,UAAU,mBAAkBH,SAAC,mCAazE,C","sources":["adminpanel/components/subscriptionMang/addSubscription.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport SideBar from \"../commonComponent/sideBar\";\r\nimport Header from \"../commonComponent/header\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { addSubscriptionPlan } from \"../../apiServices/home/homeHttpService\";\r\nimport { showAlert } from \"../commonComponent/alertManager\";\r\n\r\nfunction AddSubscription() {\r\n  const [planFeatures, setPlanFeatures] = useState([\"\"]);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  console.log(planFeatures);\r\n\r\n  const alert = useAlert();\r\n  const navigate = useNavigate();\r\n\r\n  const onSubmit = async (data) => {\r\n    data.planFeatures = planFeatures;\r\n    const response = await addSubscriptionPlan(data);\r\n    if (!response.error) {\r\n      navigate(\"/admin/subscription-plan\");\r\n      showAlert(alert, response.message, { timeout: 3000 });\r\n\r\n      reset();\r\n    } else {\r\n      showAlert(alert, response.message, { timeout: 3000 });\r\n    }\r\n  };\r\n\r\n  const addFeature = () => {\r\n    if (planFeatures.length < 5) {\r\n      setPlanFeatures([...planFeatures, \"\"]);\r\n    }\r\n  };\r\n\r\n  const handleFeatureChange = (index, value) => {\r\n    const newFeatures = [...planFeatures];\r\n    newFeatures[index] = value;\r\n    setPlanFeatures(newFeatures);\r\n  };\r\n  const deleteFeature = (index) => {\r\n    const newFeatures = [...planFeatures];\r\n    newFeatures.splice(index, 1);\r\n    setPlanFeatures(newFeatures);\r\n  };\r\n  return (\r\n    <>\r\n      <Header />\r\n\r\n      <div className=\"admin_main\">\r\n        <SideBar />\r\n        <div className=\"admin_contentpart\">\r\n          <Link to=\"/admin/subscription-plan\" className=\"comman_btn w-fit\">\r\n            <i className=\"fa fa-arrow-left\" />\r\n          </Link>\r\n          <div className=\"row comman_design mx-0 mt-4\">\r\n            <div className=\"col-12\">\r\n              <div className=\"row comman_table pt-md-4 pb-md-4 pb-3 px-md-4 px-2\">\r\n                <h3 className=\"mb-3 fs-5 fw-semibold\">Add Subscription Plan</h3>\r\n                <form className=\"form-design\" onSubmit={handleSubmit(onSubmit)}>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"form-label\">Plan Name</label>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"planName\"\r\n                          id=\"planName\"\r\n                          {...register(\"planName\", {\r\n                            required: true,\r\n                          })}\r\n                        />\r\n                        {errors.planName &&\r\n                          errors.planName.type === \"required\" && (\r\n                            <p className=\"form-error\">This field is required</p>\r\n                          )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"form-label\">Plan price</label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          name=\"planPrice\"\r\n                          id=\"planPrice\"\r\n                          {...register(\"planPrice\", {\r\n                            required: true,\r\n                          })}\r\n                        />\r\n                        {errors.planPrice &&\r\n                          errors.planPrice.type === \"required\" && (\r\n                            <p className=\"form-error\">This field is required</p>\r\n                          )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"form-label\">\r\n                          Plan Duration (Month)\r\n                        </label>\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control\"\r\n                          name=\"planDuration\"\r\n                          id=\"planDuration\"\r\n                          {...register(\"planDuration\", {\r\n                            required: true,\r\n                            pattern: {\r\n                              value: /^([1-9]|1[0-2])$/,\r\n                            },\r\n                          })}\r\n                        />\r\n                        {errors.planDuration &&\r\n                          errors.planDuration.type === \"required\" && (\r\n                            <p className=\"form-error\">This field is required</p>\r\n                          )}\r\n                        {errors.planDuration &&\r\n                          errors.planDuration.type === \"pattern\" && (\r\n                            <p className=\"form-error\">Invalid Month</p>\r\n                          )}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                      <div className=\"form-group\">\r\n                        <label>Plan Features</label>\r\n                        {planFeatures.map((feature, index) => (\r\n                          <div className=\"input-group mb-2\" key={index}>\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              value={feature}\r\n                              onChange={(e) =>\r\n                                handleFeatureChange(index, e.target.value)\r\n                              }\r\n                            />\r\n                            {index === 0 ? (\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-outline-secondary comman_btn w-fit\"\r\n                                onClick={addFeature}\r\n                              >\r\n                                +\r\n                              </button>\r\n                            ) : (\r\n                              <button\r\n                                type=\"button \"\r\n                                className=\"btn btn-outline-secondary comman_btn w-fit bg-custom-secondary\"\r\n                                onClick={() => deleteFeature(index)}\r\n                              >\r\n                                -\r\n                              </button>\r\n                            )}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                      <div className=\"form-group\">\r\n                        <label htmlFor=\"form-label\">Plan Description</label>\r\n                        <textarea\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"planDescription\"\r\n                          id=\"planDescription\"\r\n                          {...register(\"planDescription\", {\r\n                            required: true,\r\n                          })}\r\n                        />\r\n                        {errors.planDescription &&\r\n                          errors.planDescription.type === \"required\" && (\r\n                            <p className=\"form-error\">This field is required</p>\r\n                          )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                      <button type=\"submit\" className=\"comman_btn w-fit\">\r\n                        Add Plan\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddSubscription;\r\n"],"names":["planFeatures","setPlanFeatures","useState","register","handleSubmit","reset","formState","errors","useForm","mode","console","log","alert","useAlert","navigate","useNavigate","addFeature","length","_jsxs","_Fragment","children","_jsx","Header","className","SideBar","Link","to","onSubmit","async","data","response","addSubscriptionPlan","error","showAlert","message","timeout","htmlFor","type","name","id","required","planName","planPrice","pattern","value","planDuration","map","feature","index","onChange","e","handleFeatureChange","newFeatures","target","onClick","splice","deleteFeature","planDescription"],"sourceRoot":""}